"""
1.结构:
while 条件语句:
	循环体

2.说明:
while: 关键字
条件语句: 结果是True或者False
循环体: 要重复执行的代码

3.执行过程:
判断条件语句的结果是否为True, 如果为True就执行循环体，
执行完循环体再判断条件语句是否为True,如果为True就执行循环体....
直到条件语句的结果为False为止
"""
# 1+2+3+...+100


"""
x = 1
sum1 = 0

x = 1
1 <= 5  True;  sum1 += 1  sum1 = sum1 + 1 = 0+1; x = x+1 = 2

x = 2
2 <= 5  True;  sum1 += 2 sum1 = 0+1+2; x = x+1 = 3

x = 3
3 <= 5 True;  sum1 += 3 sum1 = 1+2+3; x = x+1 = 4

x = 4
4 <= 5 True; sum1 += 4  sum1 = 1+2+3+4; x = 5

x = 5
5 <= 5 True; sum1 += 5  sum1 = 1+2+3+4+5; x = 6

x = 6
6 <= 5 False 结束

"""
x = 1
sum1 = 0
while x <= 100:
	# print(x)
	sum1 += x
	x += 1

print(sum1)

# 练习，问，循环结束后，x的值和sum1的值，分别是多少
x = 1
sum1 = 0
while x <= 5:
	x += 1
	sum1 += x

# x=6 sum1=20=2+3+4+...+6



# for循环和while循环的比较：
# for循环循环次数是有限的，并且是固定(确定); while循环的循环次数不确定
# for循环: 1.遍历序列中的值 2.循环次数确定
# while: 1.死循环  2.循环次数不确定

# 练习: 找大于10000的数中，第一个能够被23整除的数
"""
x = 10001
10001 % 23 != 0  True  x = 10002

x = 10002
10002 % 23 !=0   True  x = 10003

x = 10003
10003 % 23 !=0   True  x = 10004

x = 10004
10004 % 23 !=0   True  x = 10005

x = 10005
10005 % 23 !=0   False  结束
"""
x = 10001
while x % 23 != 0:
	x += 1

print(x)
















